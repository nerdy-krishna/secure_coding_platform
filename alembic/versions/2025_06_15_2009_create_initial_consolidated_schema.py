"""Create initial consolidated schema

Revision ID: 02f5bf6d1f79
Revises:
Create Date: 2025-06-15 20:09:20.438568

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "02f5bf6d1f79"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "llm_configurations",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("provider", sa.String(), nullable=False),
        sa.Column("model_name", sa.String(), nullable=False),
        sa.Column("encrypted_api_key", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_llm_configurations_name"), "llm_configurations", ["name"], unique=True
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "code_submissions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("repo_url", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("submitted_at", sa.DateTime(), nullable=False),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("frameworks", sa.JSON(), nullable=True),
        sa.Column("main_llm_config_id", sa.UUID(), nullable=True),
        sa.Column("specialized_llm_config_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["main_llm_config_id"],
            ["llm_configurations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["specialized_llm_config_id"],
            ["llm_configurations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "llm_interactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("submission_id", sa.UUID(), nullable=True),
        sa.Column("file_path", sa.String(), nullable=True),
        sa.Column("agent_name", sa.String(), nullable=False),
        sa.Column("prompt", sa.Text(), nullable=False),
        sa.Column("raw_response", sa.Text(), nullable=False),
        sa.Column("parsed_output", sa.JSON(), nullable=True),
        sa.Column("error", sa.Text(), nullable=True),
        sa.Column("cost", sa.Float(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["code_submissions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_llm_interactions_id"), "llm_interactions", ["id"], unique=False
    )
    op.create_table(
        "submitted_files",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("submission_id", sa.UUID(), nullable=False),
        sa.Column("file_path", sa.String(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column("analysis_summary", sa.Text(), nullable=True),
        sa.Column("identified_components", sa.JSON(), nullable=True),
        sa.Column("asvs_analysis", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["code_submissions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "vulnerability_findings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("submission_id", sa.UUID(), nullable=False),
        sa.Column("file_path", sa.String(), nullable=False),
        sa.Column("cwe", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("severity", sa.String(), nullable=False),
        sa.Column("line_number", sa.Integer(), nullable=False),
        sa.Column("remediation", sa.Text(), nullable=False),
        sa.Column("confidence", sa.String(), nullable=False),
        sa.Column("references", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["code_submissions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "fix_suggestions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("finding_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("suggested_fix", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["finding_id"],
            ["vulnerability_findings.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("fix_suggestions")
    op.drop_table("vulnerability_findings")
    op.drop_table("submitted_files")
    op.drop_index(op.f("ix_llm_interactions_id"), table_name="llm_interactions")
    op.drop_table("llm_interactions")
    op.drop_table("code_submissions")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_llm_configurations_name"), table_name="llm_configurations")
    op.drop_table("llm_configurations")
    # ### end Alembic commands ###
